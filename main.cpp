//==============================================================================
//==============================================================================
// Name        : main.cpp
// Author      : Cairo Martins 
// Version     : 1.0
// Description : Program to develop the classic R-K numerical method
// Status      : Needs verification
//==============================================================================
//==============================================================================

#define PI 3.14159265 

//==============================================================================
//                              C++ Includes 
//==============================================================================

#include <cstdlib>
#include <iostream>
#include <math.h>
#include <vector>

//==============================================================================
//                              Prototypes 
//==============================================================================

double funcao(double, double);

//==============================================================================
//                              Main Function 
//==============================================================================

int main()
{
//_________________________ Declarando vetores _________________________________
    
    std :: vector <double>           x, y;
    
//__________________________ Valores Iniciais __________________________________
y[0]= 1.0;          //y0
x[0]= 0.0;          //x0
int  n(4);          //número iterações
double d(0.5);      //delta

//_________________________Completando Vetor X__________________________________
for (int m=1; m<=n; m++)
{
     x[m]= x[m-1] + d;
}

//_________________________Completando Vetor Y__________________________________
for (int m=1; m<=n; m++)
{
    //Calculando valores de K1,...K4
    
    double k1(funcao(x[m-1], y[m-1])),
           k2(funcao((x[m-1] + d/2), (y[m-1] + (k1*d/2)))),
           k3(funcao((x[m-1] + d/2), (y[m-1] + (k2*d/2)))),
           k4(funcao((x[m-1] + d),   (y[m-1] + (k3*d))));
    

    std :: cout << "k1=" << k1 << std :: endl;
    std :: cout << "k2=" << k2 << std :: endl;
    std :: cout << "k3=" << k3 << std :: endl;
    std :: cout << "k4=" << k4 << std :: endl;

    y[m] = y[m-1] + (d/6)*(k1 + 2*k2 + 2*k3 + k4);
    std :: cout << "y=" << y[m] << std :: endl;

}

    return 0;
}

//==============================================================================
//                              Other Functions
//==============================================================================

double funcao (double _a, double _b)
{    
    return _b * sin (_a) * sin (_a);
}